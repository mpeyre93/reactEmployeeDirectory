{"version":3,"sources":["API.js","pages/EmployeeSearch.js","pages/EmployeeInfo.js","pages/EmployeeResults.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeSearch","props","className","onChange","handleInputChange","value","id","type","name","list","placeholder","onClick","handleSearch","EmployeeInfo","sortByName","results","map","result","src","picture","medium","alt","first","last","cell","href","email","format","dob","date","login","uuid","EmployeeResults","state","search","employees","filteredEmployees","order","filtereds","sorteds","sort","a","b","console","log","setState","event","UserInput","target","filter","employee","toLowerCase","indexOf","employeeSearch","API","then","res","data","catch","err","preventDefault","alert","includes","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6b10dfb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    //Get random users\r\n    getUsers: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=300&nat=us\");\r\n    }\r\n};","import React from \"react\"\r\nimport \"./employeeStyle.css\";\r\n\r\nfunction EmployeeSearch(props) {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <header className=\"z-depth-3 col s12\" >\r\n                <div className=\"row\">\r\n                    {/* header */}\r\n                    <div className=\"col s6\">\r\n                        <h3 className=\"right-align headerText\">Employee Information Directory</h3>\r\n                        {/* Use to narrow your search */}\r\n                    </div>\r\n                    <div className=\"col s6 \">\r\n                        <div className=\"col s6 inputAndButton right-align \">\r\n                            <input\r\n                                onChange={props.handleInputChange}\r\n                                value={props.value}\r\n                                id=\"employees\"\r\n                                type=\"text\"\r\n                                name=\"search\"\r\n                                list=\"employee\"\r\n                                className=\" inputBox  \"\r\n                                placeholder=\"Search by name\" />\r\n                        </div>\r\n                        <div className=\"col m4\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                value=\"\"\r\n                                className=\" btn z-depth-2 waves-effect  searchBttn\"\r\n                                onClick={props.handleSearch} >Search</button>\r\n                        </div>\r\n                    </div>\r\n                    {/* header */}\r\n                </div>\r\n            </header>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EmployeeSearch","import React from \"react\";\r\nimport Moment from 'react-moment';\r\nimport \"./employeeStyle.css\";\r\n\r\nfunction EmployeeInfo(props) {\r\n      return (\r\n        <table className=\"tableEmployee \">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th onClick={props.sortByName}>Name</th>\r\n                    <th>Phone</th>\r\n                    <th>E-mail</th>\r\n                    <th>DOB</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className= \"\">\r\n                {props.results.map(result => (\r\n                    <tr className=\"table\" key={result.login.uuid}>\r\n                        <td> <img className=\"\r\n                        \"src={result.picture.medium} alt=\"\" /></td>\r\n                        <td>{result.name.first + \" \" + result.name.last}  </td>\r\n                        <td>{result.cell}</td>\r\n                        <td className=\"email\"><a href={result.email}>{result.email}</a></td>\r\n                        <td><Moment format=\"MM/DD/YYYY\">{result.dob.date}</Moment></td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table >\r\n    )\r\n}\r\n\r\nexport default EmployeeInfo","import API from \"../API\";\r\nimport React, { Component } from \"react\"\r\nimport EmployeeSearch from \"./EmployeeSearch\"\r\nimport EmployeeInfo from \"./EmployeeInfo\"\r\nimport \"./employeeStyle.css\";\r\n\r\nclass EmployeeResults extends Component {\r\n\r\n    //setting initial state\r\n    //search starts as empty string\r\n    //employess and filteredEmployess are empty arrays\r\n    //reference the order for employees. Random by default\r\n    state = {\r\n        search: \"\",\r\n        employees: [],\r\n        filteredEmployees: [],\r\n        order: \"\"\r\n    };\r\n\r\n    //initialization, when page is first loaded\r\n    componentDidMount() {\r\n        API.getUsers().then(res => this.setState({\r\n            employees: res.data.results,\r\n            filteredEmployees: res.data.results\r\n        })).catch(err => console.log(err))\r\n    }\r\n\r\n    //if \"name\" is clicked employee shown by asc/desc order\r\n    sortByName = () => {\r\n        const filtereds = this.state.filteredEmployees;\r\n        if (this.state.order === \"asc\") {\r\n            const sorteds = filtereds.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1)\r\n            console.log(sorteds)\r\n            this.setState({\r\n                filteredEmployees: sorteds,\r\n                order: \"desc\"\r\n            })\r\n        } else {\r\n            const sorteds = filtereds.sort((a, b) => (a.name.first > b.name.first) ? -1 : 1)\r\n            console.log(sorteds)\r\n            this.setState({\r\n                filteredEmployees: sorteds,\r\n                order: \"asc\"\r\n            })\r\n        }\r\n    }\r\n    //when input is changing it will dynamically show the associates names that match in the screen\r\n    handleInputChange = event => {\r\n        const employees = this.state.employees;\r\n        const UserInput = event.target.value;\r\n        const filteredEmployees = employees.filter(employee => employee.name.first.toLowerCase().indexOf(UserInput.toLowerCase()) > -1\r\n        )\r\n        this.setState({\r\n            //change state of filteredEmployes to hold all employees that match users\r\n            //search, passed down in this state\r\n\r\n            filteredEmployees,\r\n        });\r\n    };\r\n\r\n\r\n    //API call triggered when page refreshed and application loaded \r\n    employeeSearch = () => {\r\n        API.getUsers()\r\n            .then(res => this.setState({\r\n\r\n                //change state to hold data from API call, passed through props\r\n                filteredEmployees: res.data.results,\r\n                employees: res.data.results\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //handle search btn action\r\n    handleSearch = event => {\r\n        event.preventDefault();\r\n        if (!this.state.search) {\r\n            alert(\"Enter a name\")\r\n        }\r\n        const { employees, search } = this.state;\r\n\r\n        //filter object, look for the value input by the user\r\n        const filteredEmployees = employees.filter(employee => employee.name.first.toLowerCase().includes(search.toLowerCase()));\r\n\r\n        this.setState({\r\n            filteredEmployees\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <EmployeeSearch\r\n                    employee={this.state.employees}\r\n                    handleSearch={this.handleSearch}\r\n                    handleInputChange={this.handleInputChange} />\r\n                <EmployeeInfo results={this.state.filteredEmployees}\r\n                    sortByName={this.sortByName}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeResults","import React from 'react';\nimport EmployeeResults from './pages/EmployeeResults';\n\nfunction App() {\n  return (\n  \n    <EmployeeResults />\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}